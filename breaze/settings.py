"""
Django settings for breaze project.

Generated by 'django-admin startproject' using Django 1.10.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ''

# SECURITY WARNING: don't run with debug turned on in production!

DEBUG = True if os.environ.get('DEBUG', False) == 'True' else False
DB_DEBUG = True if os.environ.get('DB_DEBUG', False) == 'True' else False

#TODO(PoLR - Juan):  Read the initial values for the settings from the database on web server startup.  Set them here if you want to minimize the code changes in the polygons.py, utilities.py, and views.py modules
#BEGIN PoLR Specific Settings    
POLR_DEBUG_LEVEL = 0 #0 = No debug, 1 = Sparse Debug, 2 = Verbose Debug, 3 = All Debug
POLR_GOOGLE_DISTANCEMATRIX_API_URL = 'https://maps.googleapis.com/maps/api/distancematrix/json?key{0}&origins{1}&destinations{2}&mode{3}&arrival_time{4}'  #additional API call parameters would go here
POLR_GOOGLE_GEOCODE_API_URL = 'https://maps.googleapis.com/maps/api/geocode/json?key{0}&address{1}'
#END PoLR Specific Settings    

ALLOWED_HOSTS = ['*']

CURRENT_URL = os.environ.get('CURRENT_URL', 'http://localhost:8000')

AUTH_USER_MODEL = 'user.User'

# Application definition

INSTALLED_APPS = [
    'user',
    'real_estate',
    'admins',

    #START Add Schools to Details Page Map:amoha083@fiu.edu
    'school',
    #END Add Schools to Details Page Map:amoha083@fiu.edu

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'debug_toolbar',
    'django.contrib.sites',
    'django_celery_results',
    'django_celery_beat',
    'django.contrib.gis',
    'corsheaders',
    'rest_framework_nested',
    'rest_framework',
    'rest_framework_gis',
    'rest_framework.authtoken',
    'rest_auth',
    'allauth',
    'allauth.account',
    'rest_auth.registration',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'allauth.socialaccount.providers.twitter',
    'allauth.socialaccount.providers.google',
    'crispy_forms',
    'neighbourhood.apps.NeighbourhoodConfig',
    'django_filters',
    'county_records',
]

SITE_ID = 2

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # START API authentication: erosa044@fiu.edu
    'breaze.middlewares.DisableCSRF'
    # END API authentication
]

DATE_INPUT_FORMATS = ['%d-%b-%y %H:%M:%S','%m/%d/%Y %H:%M']
USE_TZ = False

INTERNAL_IPS = ('127.0.0.1',)

ROOT_URLCONF = 'breaze.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates','example')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'breaze.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases
SPATIALITE_LIBRARY_PATH='/usr/local/lib/mod_spatialite.dylib'

if DB_DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': 'django.contrib.gis.db.backends.spatialite',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }
else:
        DATABASES = {
        'default': {
            'ENGINE': 'django.contrib.gis.db.backends.postgis',
            'NAME': os.environ.get('POSTGRES_DB'),
            'USER': os.environ.get('POSTGRES_USER'),
            'PASSWORD': os.environ.get('POSTGRES_PASSWORD'),
            'HOST': os.environ.get('POSTGRES_HOST'),
            'PORT': os.environ.get('POSTGRES_PORT'),
        }
    }

# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/static/'
APPEND_SLASH = True

# Django Cors Headers Settings
CORS_ORIGIN_ALLOW_ALL = os.environ.get('CORS_ORIGIN_ALLOW_ALL', True)
#CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOW_HEADERS = (
    'accept',
    'accept-encoding',
    'authorization',
    'Content-Type',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
)

CORS_ALLOW_METHODS = (
    'GET',
    'OPTIONS',
    'POST',
    'PUT',
    'PATCH'
)

# START API authentication: erosa044@fiu.edu
LOGIN_URL = '/auth/login'
LOGOUT_URL = '/logout'
LOGIN_REDIRECT_URL = '/auth/user'
LOGOUT_REDIRECT_URL = '/successful_logout'

ACCOUNT_LOGOUT_ON_GET = True
REDIRECT_ON_LOGOUT = True
# END API authentication

#if DEBUG:
#    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
#else:
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = ' breazehomenoreply@gmail.com'#'noreply@breazehome.com'
#DEFAULT_FROM_EMAIL = 'noreply@breazehome.com'
EMAIL_HOST_PASSWORD = 'testnoreply'#os.environ.get('EMAIL_HOST_PASSWORD', '')
EMAIL_PORT = 587
EMAIL_USE_TLS = True


REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 100,
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication'
    ),
    'DEFAULT_FILTER_BACKENDS': (
        'rest_framework_filters.backends.DjangoFilterBackend',
        'django_filters.rest_framework.DjangoFilterBackend',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'djangorestframework_camel_case.render.CamelCaseJSONRenderer', # Any other renders
        'rest_framework.renderers.BrowsableAPIRenderer',
        'rest_framework.renderers.JSONRenderer',
    ),
    'DEFAULT_PARSER_CLASSES': (
        'djangorestframework_camel_case.parser.CamelCaseJSONParser', # Any other parsers
        'rest_framework.parsers.JSONParser',
        # START API authentication: erosa044@fiu.edu
        'rest_framework.parsers.FormParser',
        'rest_framework.parsers.MultiPartParser',
        # END API authentication
    ),
    # START API authentication: erosa044@fiu.edu
    'DEFAULT_PERMISSION_CLASSES': (
        'breaze.permissions.IsSuperUserOrReadOnly',
    )
    # END API authentication
}

REST_FRAMEWORK_EXTENSIONS = {
    'DEFAULT_CACHE_RESPONSE_TIMEOUT': (60 * 15)
}

# django-rest-auth settings
# http://django-rest-auth.readthedocs.io/en/latest/configuration.html
REST_AUTH_SERIALIZERS = {
    'USER_DETAILS_SERIALIZER': 'user.serializers.UserSerializer',
    'PASSWORD_RESET_SERIALIZER': 'user.serializers.PasswordResetSerializer',
    # START API authentication: erosa044@fiu.edu
    'LOGIN_SERIALIZER': 'user.serializers.NoEmailLoginSerializer',
    # END API authentication
}

REST_AUTH_REGISTER_SERIALIZERS = {
    'REGISTER_SERIALIZER': 'user.serializers.RegisterSerializer',
}

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'username'
SOCIALACCOUNT_ADAPTER = 'user.auth.SocialAccountAdapter'
SOCIALACCOUNT_QUERY_EMAIL=True
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'email', 'profile',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    },
    'facebook': {
        'METHOD': 'oauth2',
        'SCOPE': ['email', 'public_profile', 'user_friends'],
        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        'FIELDS': [
            'id',
            'email',
            'name',
            'first_name',
            'last_name',
            'verified',
            'locale',
            'timezone',
            'link',
            'gender',
            'updated_time',
        ],
        'EXCHANGE_TOKEN': True,
        'LOCALE_FUNC': 'path.to.callable',
        'VERIFIED_EMAIL': False,
        'VERSION': 'v2.4',
    }
}


#Celery stuff
BROKER_URL = 'redis://:wRCJce63tTIvUg88bfA8OkoFB@dev.breazehome.com:6379/0'
CELERY_BROKER_URL = 'redis://:wRCJce63tTIvUg88bfA8OkoFB@dev.breazehome.com:6379/0'
CELERY_RESULT_BACKEND = 'django-db'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERYBEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'
CELERY_TIMEZONE = 'America/New_York'